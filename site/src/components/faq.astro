---
export interface Props {
  content: { question: string; answer: string }[]
}

const { content } = Astro.props

const contentLDJson = JSON.stringify({
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": content.map(i => ({
      "@type": "Question",
      "name": i.question,
      "acceptedAnswer": {
        "@type": "Answer",
        "text": i.answer
      }
    }))
})

---

<h2>Preguntas frecuentes</h2>

<div class="faq" data-faq>
  <ul>
    {
      content.map((i) => (
        <li>
          <p>{i.question}</p>
          <p>{i.answer}</p>
        </li>
      ))
    }
    <li>
      <p>Tengo más preguntas, ¿Qué puedo hacer?</p>
      <p>¡No dudes en contactarnos! Te aclararemos cualquier duda.</p>
    </li>
  </ul>
</div>

<script is:inline type="application/ld+json" set:html={contentLDJson}></script>

<style>
  .faq {
    @apply mt-8 select-none overflow-hidden rounded-md border-2 border-brand-200 bg-white transition-all;
  }

  .faq > :global(ul) {
    @apply flex flex-col;
  }

  .faq > :global(ul > li) {
    list-style-type: none;
    @apply relative m-0 -mt-[2px] cursor-pointer border-t-2 border-brand-200 pl-4 pr-12 hover:bg-neutral-100;

    &:after {
      content: "\002B";
      @apply absolute right-5 top-4 font-title text-xl font-bold text-brand-500 sm:text-2xl;
    }
    &.open:after {
      content: "\2212";
    }

    & > :global(:not(:first-child)) {
      @apply m-0 h-0 overflow-clip transition-all;
    }

    &.open > :global(:not(:first-child)) {
      @apply my-4 block h-auto overflow-visible;
      /* height: calc-size(auto); */
    }
  }

  .faq > :global(ul > li > *:first-child) {
    @apply font-title text-xl font-bold leading-tight text-brand-500 sm:text-2xl;
  }

  .faq > :global(ul > li > *:last-child) {
  }
</style>
<script>
  const faqs = document.querySelectorAll("[data-faq]")
  faqs.forEach((faq) => {
    const questions = faq.querySelectorAll("li")
    questions.forEach((q, i) => {
      // if (i === 0) {
      //   q.classList.add("open")
      // }
      q.addEventListener("click", () => {
        q.classList.toggle("open")
        // questions.forEach((oq) => {
        //   if (oq !== q) oq.classList.remove("open")
        // })
      })
    })
  })
</script>
