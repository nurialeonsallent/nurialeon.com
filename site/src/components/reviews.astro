---
import { reviews } from "~/content/reviews"
import Star from "~/icons/star.astro"
import { Picture } from "astro:assets"
import GoIcon from "~/icons/go.astro"
import googleReviewsImage from "@images/google-reviews.webp"

const orderedReviews = [...reviews]
  .map((r, i) => ({ ...r, index: i }))
  .sort(
    (a, b) =>
      new Date("01/" + b.date).getTime() - new Date("01/" + a.date).getTime() ||
      a.index - b.index
  )
---

<h2>Reseñas ({reviews.length + 30}+)</h2>
<div class="relative">
  <div
    class="scroll flex flex-col gap-2 overflow-y-scroll max-h-[min(50vh,450px)] bg-white"
  >
    {
      orderedReviews.map((r) => (
        <div class="text-neutral-800 border-l-4 p-2 flex flex-col bg-[#eff2f6] border-[#4285F4]/50 mr-1">
          <span>
            <i>
              <b>{r.name}</b> {r.date}
            </i>{" "}
            {new Array(r.score).fill(0).map(() => (
              <Star />
            ))}
          </span>
          <span class="text-sm italic text-neutral-800">{r.text}</span>
        </div>
      ))
    }
  </div>
  <div class="shadow"></div>
  <a
    href="https://g.page/r/Cbk285IdPtR5EAg"
    target="_blank"
    rel="noopener"
    class="no-underline text-current flex flex-row items-center justify-center bg-white px-4 py-2 mt-2 border-2 border-[#4285F4]/50 rounded-md"
  >
    <div
      class="grow flex flex-row items-center justify-center gap-x-4 flex-wrap"
    >
      <Picture
        src={googleReviewsImage}
        alt="Google Reviews"
        height={50}
        width={100}
        class="m-0"
      />
      <div class="flex flex-row items-center justify-center">
        <span class="text-xl font-medium">4,9</span>
        <Star />
        <span class="text-sm text-neutral-500">(+100)</span>
      </div>
    </div>
    <button
      class="bg-[#2275d9] text-white px-4 py-2 font-medium rounded-full shrink-0 hover:bg-[#2275d9]/80 border-2 border-[#184e90]"
      ><span>Ver más Reseñas</span> <GoIcon /></button
    >
  </a>
</div>
<style>
  .shadow {
    background: linear-gradient(0deg, rgba(0, 0, 0, 0.25), transparent);
    width: 100%;
    height: 20px;
    margin-top: -20px;
    position: absolute;
  }

  .scroll {
    --scrollbar-color-thumb: rgb(175 100 114);
    --scrollbar-color-track: force-error;
    --scrollbar-width: auto;
    --scrollbar-width-legacy: 10px;
    --scrollbar-height-legacy: 50px;
  }

  @supports (scrollbar-width: auto) {
    .scroll {
      scrollbar-color: var(--scrollbar-color-thumb) var(--scrollbar-color-track);
      scrollbar-width: var(--scrollbar-width);
    }
  }

  @supports selector(::-webkit-scrollbar) {
    .scroll:hover {
      --fix: ; /* This custom property invalidates styles on hover, thereby enforcing a style recomputation. This is needed to work around a bug in Safari. */
    }

    .scroll::-webkit-scrollbar-thumb {
      background: var(--scrollbar-color-thumb);
      min-height: var(--scrollbar-height-legacy);
      border-radius: var(--scrollbar-width-legacy);
    }

    .scroll::-webkit-scrollbar-track {
      background: var(--scrollbar-color-track);
    }

    .scroll::-webkit-scrollbar {
      max-width: var(--scrollbar-width-legacy);
      max-height: var(--scrollbar-width-legacy);
    }
  }
</style>
